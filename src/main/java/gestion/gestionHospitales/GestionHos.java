/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestion.gestionHospitales;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.toedter.calendar.JCalendar;
import com.toedter.calendar.JDateChooser;
import gestion.api.MiApi;
import gestion.api.NetworkClient;
import gestion.api.VariablesLogin;
import gestion.dto.HospitalDTO;
import gestion.dto.MedicoDTO;
import gestion.dto.PacienteDTO;
import gestion.textArea.TxtAreaMedicos;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;

/**
 *
 * @author ck
 */
public class GestionHos extends javax.swing.JDialog {

    private JCalendar calendar;
    private List<MedicoDTO> listM;

    /**
     * Creates new form GestionHos
     *
     * @param parent
     * @param modal
     */
    public GestionHos(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("GESTION HOSPITALARIA");
        setLocationRelativeTo(null);
        cmbEspecialidad.setVisible(false);
        jTFecha.setVisible(false);
        cmbConsulta.setVisible(false);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        iniciarCalendario();
        cargarCombos();
    }

    private void cargarCombos() {
        int nConsutlas = Integer.parseInt(VariablesLogin.getMedico().getHospital().getNumConsultas());
        for (int i = 1; i <= nConsutlas; i++) {
            cmbConsulta.addItem(i);
        }
        String[] listaEsp = new String[]{"Alergología", "Anatomía Patológica", "Anestesiología y Reanimación",
            "Atencion primaria", "Angiología y Cirugía Vascular", "Aparato Digestivo", "Cardiología",
            "Cirugía Cardiovascular", "Cirugía General", "Maxilofacial", "Traumatología", "Pediatría",
            "Dermatología", "Nutrición", "Fisioterapia", "Neurología", "Oncología", "Ginecología",
            "Otorrinolaringología", "Psiquiatría", "Urología"};
        for (String listaEsp1 : listaEsp) {
            cmbEspecialidad.addItem(listaEsp1);
        }
    }

    private void iniciarCalendario() {
        calendar = new JCalendar();
        calendar.setWeekOfYearVisible(false);
        Date d = new Date();
        calendar.setDate(d);
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DATE, -1);
        Date ayer = cal.getTime();
        calendar.setMaxSelectableDate(ayer);
        JDialog dialog = new JDialog();
        JDateChooser chooser = new JDateChooser();
        chooser.setMaxSelectableDate(ayer);
        chooser.setLocale(getLocale());
        chooser.addPropertyChangeListener("date", (PropertyChangeEvent evt) -> {
            jTxtPassword.requestFocus();
            JDateChooser chooser1 = (JDateChooser) evt.getSource();
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            jTFecha.setText(formatter.format(chooser1.getDate()));
            dialog.dispose();
        });
        JPanel content = new JPanel();
        content.add(chooser);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.getContentPane().add(content);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setTitle("Elige fecha");
        dialog.setModal(true);
        jTFecha.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                jButton5.requestFocus();
                dialog.setVisible(true);
            }

            @Override
            public void focusLost(FocusEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        optPaciente = new javax.swing.JRadioButton();
        optMedico = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTxtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTxtPassword = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTFecha = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbEspecialidad = new javax.swing.JComboBox<>();
        cmbConsulta = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Crear médico/ paciente");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        buttonGroup1.add(optPaciente);
        optPaciente.setText("Paciente");
        optPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optPacienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(optMedico);
        optMedico.setText("Médico");
        optMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optMedicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optPaciente)
                    .addComponent(optMedico))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optPaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optMedico)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jButton2.setText("<html>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp Eliminar<br>Médico/ Paciente</html>");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("<html> Listar <br> Médicos</html>");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nombre: ");

        jLabel2.setText("NSS/NºLicencia");

        jLabel3.setText("Password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtId)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTxtPassword))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Fecha nac:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(27, 27, 27)
                .addComponent(jTFecha)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Especialidad: ");

        jLabel6.setText("Consulta: ");

        cmbEspecialidad.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        cmbConsulta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbEspecialidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cmbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton5.setText("Crear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 70, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (optMedico.isSelected() && !cmbEspecialidad.getSelectedItem().toString().equals("")
                && !jtxtNombre.getText().equals("") && !jTxtId.getText().equals("")
                && !cmbConsulta.getSelectedItem().toString().equals("")
                && !jTxtPassword.getText().equals("")) {
            if (!jTxtId.getText().startsWith("M")) {
                JOptionPane.showMessageDialog(null, "El nº de licencia debe emepezar por 'M'");
            } else {
                aniadirM().execute();
            }
        } else if (optPaciente.isSelected()
                && !jtxtNombre.getText().equals("") && !jTxtId.getText().equals("")
                && !jTxtPassword.getText().equals("")) {
            if (!jTxtId.getText().startsWith("ES")) {
                JOptionPane.showMessageDialog(null, "El nº de SS debe emepezar por 'ES'");
            } else {
                aniadirP().execute();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Rellene los campos");

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private SwingWorker<Response<MedicoDTO>, Void> aniadirM() {
        return new SwingWorker<Response<MedicoDTO>, Void>() {
            @Override
            protected Response<MedicoDTO> doInBackground() throws Exception {
                Response<MedicoDTO> aniadirM = aniadirMedico();
                return aniadirM;
            }

            @Override
            protected void done() {
                Response<MedicoDTO> resultado;
                try {
                    resultado = get();
                    if (resultado.isSuccessful()) {
                        JOptionPane.showMessageDialog(null, "Datos añadidos correctamente");
                        jtxtNombre.setText("");
                        jTxtPassword.setText("");
                        jTFecha.setText("");
                        jTxtId.setText("");
                        cmbEspecialidad.setSelectedIndex(0);
                        cmbConsulta.setSelectedIndex(0);
                    } else {
                        JsonObject convertedObject = new Gson().fromJson(resultado.errorBody().string(), JsonObject.class);
                        JsonElement msgElement = convertedObject.get("message");
                        JOptionPane.showMessageDialog(null, "Error de carga " + msgElement.toString());
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    JOptionPane.showMessageDialog(null, "Fallo de comunicacion " + ex);
                } catch (IOException ex) {
                    Logger.getLogger(AniadirCitas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
    }

    private Response<MedicoDTO> aniadirMedico() {
        String token = VariablesLogin.getToken();
        Retrofit retrofit = NetworkClient.getRetrofitClientWithToken(token);
        MiApi myAPI = retrofit.create(MiApi.class);
        String nombre = jtxtNombre.getText();
        String nLicencia = jTxtId.getText();
        String paswword = jTxtPassword.getText();
        int consulta = Integer.parseInt(cmbConsulta.getSelectedItem().toString());
        String especialidad = cmbEspecialidad.getSelectedItem().toString();
        HospitalDTO hos = new HospitalDTO();
        hos.setNombreHos(VariablesLogin.getMedico().getHospital().getNombreHos());
        MedicoDTO medico = new MedicoDTO();
        medico.setConsulta(consulta);
        medico.setEspecialidad(especialidad);
        medico.setHospital(hos);
        medico.setNombre(nombre);
        medico.setPassword(paswword);
        medico.setnLicencia(nLicencia);
        Call<MedicoDTO> call = myAPI.aniadirMedico(medico);
        Response<MedicoDTO> resp = null;
        try {
            resp = call.execute();
        } catch (IOException ex) {
            Logger.getLogger(Login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return resp;
    }

    private SwingWorker<Response<PacienteDTO>, Void> aniadirP() {
        return new SwingWorker<Response<PacienteDTO>, Void>() {
            @Override
            protected Response<PacienteDTO> doInBackground() throws Exception {
                Response<PacienteDTO> aniadirP = aniadirPaciente();
                return aniadirP;
            }

            @Override
            protected void done() {
                Response<PacienteDTO> resultado;
                try {
                    resultado = get();
                    if (resultado.isSuccessful()) {
                        JOptionPane.showMessageDialog(null, "Datos añadidos correctamente");
                        jtxtNombre.setText("");
                        jTxtPassword.setText("");
                        jTFecha.setText("");
                        jTxtId.setText("");
                        cmbEspecialidad.setSelectedIndex(0);
                        cmbConsulta.setSelectedIndex(0);
                    } else {
                        JsonObject convertedObject = new Gson().fromJson(resultado.errorBody().string(), JsonObject.class);
                        JsonElement msgElement = convertedObject.get("message");
                        JOptionPane.showMessageDialog(null, "Error de carga " + msgElement.toString());
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    JOptionPane.showMessageDialog(null, "Fallo de comunicacion " + ex);
                } catch (IOException ex) {
                    Logger.getLogger(AniadirCitas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
    }

    private Response<PacienteDTO> aniadirPaciente() {
        String token = VariablesLogin.getToken();
        Retrofit retrofit = NetworkClient.getRetrofitClientWithToken(token);
        MiApi myAPI = retrofit.create(MiApi.class);
        String nSS = jTxtId.getText();
        String nombre = jtxtNombre.getText();
        String paswword = jTxtPassword.getText();
        Date fNacimiento = calendar.getDate();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");
        formatter.format(fNacimiento);
        PacienteDTO paciente = new PacienteDTO();
        paciente.setNombre(nombre);
        paciente.setPassword(paswword);
        paciente.setfNacimiento(fNacimiento);
        paciente.setnSS(nSS);
        Call<PacienteDTO> call = myAPI.aniadirPaciente(paciente);
        Response<PacienteDTO> resp = null;
        try {
            resp = call.execute();
        } catch (IOException ex) {
            Logger.getLogger(Login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return resp;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        EliminarMedicoOPaciente eliminar = new EliminarMedicoOPaciente(new javax.swing.JDialog(), true);
        eliminar.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listarM().execute();
    }//GEN-LAST:event_jButton1ActionPerformed
    private SwingWorker<Response<List<MedicoDTO>>, Void> listarM() {
        return new SwingWorker<Response<List<MedicoDTO>>, Void>() {
            @Override
            protected Response<List<MedicoDTO>> doInBackground() throws Exception {
                Response<List<MedicoDTO>> listMd = listarMedico();
                return listMd;
            }

            @Override
            protected void done() {
                Response<List<MedicoDTO>> resultado;
                try {
                    resultado = get();
                    if (resultado.isSuccessful()) {
                        listM = resultado.body();
                        TxtAreaMedicos a = new TxtAreaMedicos(GestionHos.this, true, listM);
                        a.setVisible(true);
                    } else {
                        JsonObject convertedObject = new Gson().fromJson(resultado.errorBody().string(), JsonObject.class);
                        JsonElement msgElement = convertedObject.get("message");
                        JOptionPane.showMessageDialog(null, "Error de carga " + msgElement.toString());
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    JOptionPane.showMessageDialog(null, "Fallo de comunicacion " + ex);
                } catch (IOException ex) {
                    Logger.getLogger(AniadirCitas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
    }

    private Response<List<MedicoDTO>> listarMedico() {
        String nomHos = VariablesLogin.getMedico().getHospital().getNombreHos();
        String token = VariablesLogin.getToken();
        Retrofit retrofit = NetworkClient.getRetrofitClientWithToken(token);
        MiApi myAPI = retrofit.create(MiApi.class);
        Call<List<MedicoDTO>> call = myAPI.BuscarMedicosXHospital(nomHos);
        Response<List<MedicoDTO>> resp = null;
        try {
            resp = call.execute();
        } catch (IOException ex) {
            Logger.getLogger(Login.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return resp;
    }

    private void optPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optPacienteActionPerformed
        jPanel4.setVisible(true);
        jPanel5.setVisible(false);
        jTFecha.setVisible(true);
        jLabel4.setVisible(true);
        cmbEspecialidad.setVisible(false);
        jLabel5.setVisible(false);
        cmbConsulta.setVisible(false);
        jLabel6.setVisible(false);
        jTxtId.setText("ES");
    }//GEN-LAST:event_optPacienteActionPerformed

    private void optMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optMedicoActionPerformed
        jPanel4.setVisible(false);
        jPanel5.setVisible(true);
        cmbEspecialidad.setVisible(true);
        jLabel5.setVisible(true);
        cmbConsulta.setVisible(true);
        jLabel6.setVisible(true);
        jTFecha.setVisible(false);
        jLabel4.setVisible(false);
        jTxtId.setText("M");
    }//GEN-LAST:event_optMedicoActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<Integer> cmbConsulta;
    private javax.swing.JComboBox<String> cmbEspecialidad;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTFecha;
    private javax.swing.JTextField jTxtId;
    private javax.swing.JPasswordField jTxtPassword;
    private javax.swing.JTextField jtxtNombre;
    private javax.swing.JRadioButton optMedico;
    private javax.swing.JRadioButton optPaciente;
    // End of variables declaration//GEN-END:variables
}
